// SPDX-License-Identifier: MIT

pragma solidity >=0.5.0 < 0.9.0;

contract contractEvent {

    struct Event {
        address organizer;
        string name;
        uint date;
        uint price;
        uint ticketCount;
        uint ticketBalance;
    }

    mapping(uint=>Event) public events;
    mapping(address=>mapping(uint=>uint)) public  tickets;
    uint public nextID;

    function createEvent(string memory name, uint date, uint price, uint ticketCount) external  {
        require(date > block.timestamp,"Events can only be created for Duture Dates !!");
        require(ticketCount > 0,"Seems you created an Event with 0 tickets tickets or less");

        events[nextID] = Event(msg.sender,name,date,price,ticketCount,ticketCount);
        nextID++;
    }

    function buyTicket(uint id, uint quantity) external  payable  {
        Event storage _event = events[id];
        require(_event.date != 0, "Events does not exist !!");
        require(_event.date >block.timestamp, "Seems the Event is not Active" );
        
        require(_event.ticketBalance >= quantity, "Not enough Tickets left....");
        require(msg.value==(_event.price*quantity), "Not enough funds to buy !!");
        _event.ticketBalance-=quantity;
        tickets[msg.sender][id]+=quantity;
    }

    function transferTicket(uint id, uint quantity, address to) external {
        require(events[id].date != 0, "Events does not exist !!");
        require(events[id].date >block.timestamp, "Seems the Event is not Active" );
        require(tickets[msg.sender][id] >= quantity, "You dont have enough tickets to transfer !!");
        tickets[msg.sender][id]-=quantity;
        tickets[to][id]+=quantity;
    }

}
